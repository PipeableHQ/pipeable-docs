{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/docs",
          "tagsPath": "/docs/tags",
          "editUrl": "https://github.com/PipeableHQ/pipeable-docs/edit/main/docs",
          "editUrlLocalized": "https://github.com/PipeableHQ/pipeable-docs/edit/main/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/juanlozano/dev/pipeable/pipeable-docs/sidebars.js",
          "contentPath": "/Users/juanlozano/dev/pipeable/pipeable-docs/docs",
          "contentPathLocalized": "/Users/juanlozano/dev/pipeable/pipeable-docs/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "id": "intro",
              "title": "Welcome",
              "description": "This is the future home of the Pipeable documentation.",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/intro",
              "permalink": "/docs/intro",
              "draft": false,
              "unlisted": false,
              "editUrl": "https://github.com/PipeableHQ/pipeable-docs/edit/main/docs/intro.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar"
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "introducing-pipeable",
          "metadata": {
            "permalink": "/blog/introducing-pipeable",
            "editUrl": "https://github.com/PipeableHQ/pipeable-docs/blog/2024-03-19-launch/index.mdx",
            "source": "@site/blog/2024-03-19-launch/index.mdx",
            "title": "Introducing Pipeable",
            "description": "For the past few months we have been working on the PipeableSDK and today we are excited to show it to you all!",
            "date": "2024-03-19T00:00:00.000Z",
            "formattedDate": "March 19, 2024",
            "tags": [
              {
                "label": "announcements",
                "permalink": "/blog/tags/announcements"
              },
              {
                "label": "launch",
                "permalink": "/blog/tags/launch"
              }
            ],
            "readingTime": 4.445,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Deyan Vitanov",
                "title": "Pipeable contributor",
                "url": "https://github.com/dvitanov",
                "imageURL": "https://github.com/dvitanov.png",
                "key": "dvitanov"
              },
              {
                "name": "Juan Lozano",
                "title": "Pipeable contributor",
                "url": "https://github.com/jlozano",
                "imageURL": "https://github.com/jlozano.png",
                "key": "jlozano"
              },
              {
                "name": "Petar Dobrev",
                "title": "Pipeable contributor",
                "url": "https://github.com/pdobrev",
                "imageURL": "https://github.com/pdobrev.png",
                "key": "pdobrev"
              }
            ],
            "frontMatter": {
              "slug": "introducing-pipeable",
              "title": "Introducing Pipeable",
              "authors": [
                "dvitanov",
                "jlozano",
                "pdobrev"
              ],
              "tags": [
                "announcements",
                "launch"
              ]
            },
            "unlisted": false
          },
          "content": "For the past few months we have been working on the PipeableSDK and today we are excited to show it to you all!\n\n{/* truncate */}\n\n<div className=\"row\">\n  <div className=\"col col--12\">\n    <video playsInline controls width=\"100%\">\n      <source src=\"/demo_video.mp4\" type=\"video/mp4\" />\n    </video>\n  </div>\n</div>\n\n### What is Pipeable?\n\nPipeable is an open-source iOS and (soon) Android SDK that allows developers to programmatically control webviews in mobile apps. [Webviews](https://developer.apple.com/documentation/webkit/wkwebview) are essentially in-app browsers that display web content directly within the app. If you are familiar with Puppeteer or Playwright, Pipeable serves a similar purpose but for these embedded browsers, offering granular control over web interactions.\n\n### What can you use Pipeable for?\n\nYou can use Pipeable anytime you want to automate interactions with third-party websites within your mobile app. To illustrate, let's dive into a concrete example: an automation that searches HackerNews for a specific query (in this case \"web automation\") and retrieves the titles of relevant stories.\n\n```swift\n// Navigate to a web page\ntry? await page.goto(\"https://news.ycombinator.com\", waitUntil: .networkidle)\n\n// Wait for the search form to load so we can interact with it\nlet searchForm = try await page.waitForXPath(\n    \"//form[contains(@action, 'hn.algolia.com')]\", visible: true\n)\n\n// Find the search bar text input and type the query \"web automation\" into it\nlet textAreaEl = try await searchForm?.querySelector(\"input[type='text']\")\ntry await textAreaEl!.type(\"web automation\", delay: 50)\n\n// Submit the search\ntry await page.submitActiveForm()\n\n// Wait for the results page\ntry await page.waitForURL { url in url.contains(\"hn.algolia\") }\n\n// Wait for the search results to be visible\ntry await page.waitForSelector(\".Story_title\", visible: true)\n\n// Get all the story title elements from the page\nlet stories = try await page.querySelectorAll(\".Story_title a > span\")\n\nvar storyTitles: [String] = []\nfor story in stories {\n    // Get the text content for each story title\n    if let title = try await story.textContent() {\n        storyTitles.append(title)\n    }\n}\nprint(storyTitles)\n```\n\nA couple of things to note:\n\n- The automation is operating directly on the website’s document object model (DOM) and allows you, the developer, to do anything that a user can do, even if there is no API or the API is restricted.\n- If you are familiar with Playwright or Puppeteer then the above code should look familiar to you and this is intentional, we designed Pipeable to be compatible with these frameworks (see Pipeable Scripting below).\n- You can checkout the full code and a sample app [here](https://github.com/PipeableHQ/pipeable-ios-samples/tree/main).\n\n### Agentic AI\n\nWhile Pipeable can be used for many things, we are particularly excited about unlocking agentic AI on mobile through the power of webview automation. Specifically the ability to connect to 3rd party websites and perform actions there on behalf of the user, from within a mobile app. This capability paves the way for richer, more dynamic app experiences, turning mobile applications into powerful tools that not only access web information but interact with web ecosystems on behalf of users. We're eager to see the creative solutions developers will build with Pipeable, enhancing mobile app functionality and empowering users.\n\nTo get a feel for what this could look like you can check out a simple AirBnB booking agent that we built with Pipeable and GPT4.\n\n### Why webviews and Pipeable?\n\nWe think that Pipeable and webviews are a great fit for a number of reasons:\n\n- Because webviews are integrated with mobile OS-es, users can log into websites using their preferred mobile authentication workflow (leveraging FaceID, TouchID, etc.) without the need to explicitly share or type credentials. Handling CAPTCHAs, 2FA, etc. is similarly fluid.\n- Automations leverage the website’s document object model (DOM) and allow AI agents to do anything that a user can do, even when there is no API or the API is restricted.\n- Automations can be executed entirely on the client for better privacy and security. Developers can offer an option to continue the session in the cloud using Pipeable Scripting for better convenience and more flexibility.\n\n### Pipeable Scripting\n\nPipeableScript is a runtime that allows Pipeable developers to write their automation scripts in Typescript/Javascript and still execute these scripts on mobile. This has two key benefits:\n\n- You can dynamically load your scripts into your app at runtime, this means that if the underlying website changes and your automation breaks you can simply fix the script and deploy it to your app without going through the full app update process.\n- The scripts you write are broadly compatible[^1] with Playwright and Puppeteer, this means that you can run your PipeableScript in Playwright or Puppeteer if you want to execute your script on a server. This can be especially helpful for certain types of tasks which are long running or compute intensive.\n\n### Conclusion\n\nThanks for making it this far! If you are interested in learning more, you can check out out [Github repo](https://github.com/PipeableHQ/pipeable-ios) or try out one of our [sample apps](https://github.com/PipeableHQ/pipeable-ios-samples). If you want to receive updates about Pipeable, you can sign up for updates [here](https://forms.gle/i8C7F3zcuizWkien7). We are very excited about collaborating with folks building Agentic AI on mobile, if this is you, please grab some time on our [Calendly](https://calendly.com/deyan-vitanov/30min), send us an [email](mailto:hello@pipeable.com) or DM us on [Twitter](https://twitter.com/pipeablehq).\n\n[^1]: We are still working through all the details here, if you have a use case where this compatibility would be helpful please grab some time on our [Calendly](https://calendly.com/deyan-vitanov/30min), send us an [email](mailto:hello@pipeable.com) or DM us on [Twitter](https://twitter.com/pipeablehq)."
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "introducing-pipeable"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 1,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/announcements": {
          "label": "announcements",
          "items": [
            "introducing-pipeable"
          ],
          "permalink": "/blog/tags/announcements",
          "pages": [
            {
              "items": [
                "introducing-pipeable"
              ],
              "metadata": {
                "permalink": "/blog/tags/announcements",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/blog/tags/launch": {
          "label": "launch",
          "items": [
            "introducing-pipeable"
          ],
          "permalink": "/blog/tags/launch",
          "pages": [
            {
              "items": [
                "introducing-pipeable"
              ],
              "metadata": {
                "permalink": "/blog/tags/launch",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        },
        "unlisted": false
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}